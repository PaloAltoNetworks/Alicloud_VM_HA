# Configure the Alicloud Provider for hk region
provider "alicloud" {
  access_key = "${var.access_key}"
  secret_key = "${var.secret_key}"
  region     = "${var.hk-region}"
  profile = var.profile
  alias      = "hk"
}

variable "profile" {
  default = "default"
}

//Random 3 char string appended to the ened of each name to avoid conflicts
resource "random_string" "random_name_post" {
  length           = 3
  special          = true
  override_special = ""
  min_lower        = 3
}

# Get hk region zones
data "alicloud_zones" "hk-zone" {
  provider = alicloud.hk
  available_instance_type = "${var.vm-series_instance_type}"
  available_disk_category = "cloud_efficiency"
}

####################################################
# Create VPC, VSwitch, EIP and Security Group for hk
####################################################


resource "alicloud_vpc" "hk_vpc" {
  provider = "alicloud.hk"
  name        = "VPC_HA-${random_string.random_name_post.result}"
  cidr_block  = "${var.hk-vpc-cidr}"
  description = "VPC for VMFW in ${var.hk-region}"
}

# Create VSwitch For HK
####################################################
resource "alicloud_vswitch" "hk-mgmt-vswitch" {
  provider = "alicloud.hk"
  name              = "hk-Mgmt-VSwitch-${random_string.random_name_post.result}"
  vpc_id            = "${alicloud_vpc.hk_vpc.id}"
  cidr_block        = "${var.hk-mgmt-vswitch-cidr}"
  availability_zone = "${data.alicloud_zones.hk-zone.zones.0.id}"
  description       = "VSwitch for VM-series hk Mgmt"
  depends_on = ["alicloud_vpc.hk_vpc" ]
}

resource "alicloud_vswitch" "hk-mgmt-vswitch-2" {
  provider = "alicloud.hk"
  name              = "hk-Mgmt-VSwitch-2-${random_string.random_name_post.result}"
  vpc_id            = "${alicloud_vpc.hk_vpc.id}"
  cidr_block        = "${var.hk-mgmt-vswitch-cidr-2}"
  availability_zone = "${data.alicloud_zones.hk-zone.zones.1.id}"
  description       = "VSwitch for VM-series hk Mgmt-2"
  depends_on = ["alicloud_vpc.hk_vpc" ]
}

# Create VSwitch For hk
####################################################
resource "alicloud_vswitch" "hk-data-trust-vswitch" {
  provider = "alicloud.hk"
  name              = "hk-Private-VSwitch-${random_string.random_name_post.result}"
  vpc_id            = "${alicloud_vpc.hk_vpc.id}"
  cidr_block        = "${var.hk-trust-vswitch-cidr}"
  availability_zone = "${data.alicloud_zones.hk-zone.zones.0.id}"
  description       = "VSwitch for VM-series hk Trust interface"
  depends_on = ["alicloud_vpc.hk_vpc" ]
}

resource "alicloud_vswitch" "hk-data-trust-vswitch-2" {
  provider = "alicloud.hk"
  name              = "hk-Private-VSwitch-2-${random_string.random_name_post.result}"
  vpc_id            = "${alicloud_vpc.hk_vpc.id}"
  cidr_block        = "${var.hk-trust-vswitch-cidr-2}"
  availability_zone = "${data.alicloud_zones.hk-zone.zones.1.id}"
  description       = "VSwitch for VM-series hk Trust interface-2"
  depends_on = ["alicloud_vpc.hk_vpc" ]
}

# Create VSwitch For hk
####################################################
resource "alicloud_vswitch" "hk-data-untrust-vswitch" {
  provider = "alicloud.hk"
  name              = "hk-Public-VSwitch-${random_string.random_name_post.result}"
  vpc_id            = "${alicloud_vpc.hk_vpc.id}"
  cidr_block        = "${var.hk-untrust-vswitch-cidr}"
  availability_zone = "${data.alicloud_zones.hk-zone.zones.0.id}"
  description       = "VSwitch for VM-series hk Untrust interface"
  depends_on = ["alicloud_vpc.hk_vpc" ]
}
resource "alicloud_vswitch" "hk-data-untrust-vswitch-2" {
  provider = "alicloud.hk"
  name              = "hk-Public-VSwitch-2-${random_string.random_name_post.result}"
  vpc_id            = "${alicloud_vpc.hk_vpc.id}"
  cidr_block        = "${var.hk-untrust-vswitch-cidr-2}"
  availability_zone = "${data.alicloud_zones.hk-zone.zones.1.id}"
  description       = "VSwitch for VM-series hk Untrust interface-2"
  depends_on = ["alicloud_vpc.hk_vpc" ]
}
# Create EIP For hk
####################################################
resource "alicloud_eip" "hk-MGMT-EIP" {
  provider = "alicloud.hk"
  name                 = "hk-MGMT-EIP"
  description          = "Public IP assigned to hk Mgmt"
  bandwidth            = "1"
  internet_charge_type = "PayByTraffic"
}

resource "alicloud_eip" "hk-MGMT-EIP-2" {
  provider = "alicloud.hk"
  name                 = "hk-MGMT-EIP-2"
  description          = "Public IP assigned to hk Mgmt-backup"
  bandwidth            = "1"
  internet_charge_type = "PayByTraffic"
}
resource "alicloud_eip" "hk-UNTRUST-EIP" {
  provider = "alicloud.hk"
  name                 = "hk-UNTRUST-EIP"
  description          = "Public IP assigned to hk Untrust interface"
  bandwidth            = "1"
  internet_charge_type = "PayByTraffic"

  depends_on = ["module.fw_deployment"]
}

#resource "alicloud_eip" "hk-UNTRUST-EIP-2" {
#   provider = "alicloud.hk"
#   name                 = "hk-UNTRUST-EIP-2"
#   description          = "Public IP assigned to hk Untrust interface-backup"
#   bandwidth            = "1"
#   internet_charge_type = "PayByTraffic"

#   depends_on = ["module.fw_deployment"]
# }
# Create Security Group For hk
####################################################
resource "alicloud_security_group" "hk-MGMT-SG" {
  provider = "alicloud.hk"
  name        = "hk-Mgmt-Security-Group"
  vpc_id      = "${alicloud_vpc.hk_vpc.id}"
  description = "Security Group for hk"
}

resource "alicloud_security_group" "hk-TRUST-SG" {
  provider = "alicloud.hk"
  name        = "hk-Trust-Security-Group"
  vpc_id      = "${alicloud_vpc.hk_vpc.id}"
  description = "Security Group for hk Trust"
}

resource "alicloud_security_group" "hk-UNTRUST-SG" {
  provider = "alicloud.hk"
  name        = "hk-Untrust-Security-Group"
  vpc_id      = "${alicloud_vpc.hk_vpc.id}"
  description = "Security Group for hk Untrust"
}

# Add rules to Security Group For hk
####################################################
resource "alicloud_security_group_rule" "allow_all_icmp" {
  provider = "alicloud.hk"
  type              = "ingress"
  ip_protocol       = "icmp"
  nic_type          = "intranet"
  policy            = "accept"
  port_range        = "-1/-1"
  priority          = 1
  security_group_id = "${alicloud_security_group.hk-MGMT-SG.id}"
  cidr_ip           = "0.0.0.0/0"
}

resource "alicloud_security_group_rule" "allow_all_443" {
  provider = "alicloud.hk"
  type              = "ingress"
  ip_protocol       = "tcp"
  nic_type          = "intranet"
  policy            = "accept"
  port_range        = "443/443"
  priority          = 1
  security_group_id = "${alicloud_security_group.hk-MGMT-SG.id}"
  cidr_ip           = "0.0.0.0/0"
}

resource "alicloud_security_group_rule" "allow_tcp_trust_all" {
  provider = "alicloud.hk"
  type              = "ingress"
  ip_protocol       = "tcp"
  nic_type          = "intranet"
  policy            = "accept"
  port_range        = "1/65535"
  priority          = 100
  security_group_id = "${alicloud_security_group.hk-TRUST-SG.id}"
  cidr_ip           = "0.0.0.0/0"
}

resource "alicloud_security_group_rule" "allow_tcp_untrust_all" {
  provider = "alicloud.hk"
  type              = "ingress"
  ip_protocol       = "tcp"
  nic_type          = "intranet"
  policy            = "accept"
  port_range        = "1/65535"
  priority          = 1
  security_group_id = "${alicloud_security_group.hk-UNTRUST-SG.id}"
  cidr_ip           = "0.0.0.0/0"
}

resource "alicloud_security_group_rule" "allow_tcp__mgmt_22" {
  provider = "alicloud.hk"
  type              = "ingress"
  ip_protocol       = "tcp"
  nic_type          = "intranet"
  policy            = "accept"
  port_range        = "22/22"
  priority          = 1
  security_group_id = "${alicloud_security_group.hk-MGMT-SG.id}"
  cidr_ip           = "0.0.0.0/0"
}

resource "alicloud_instance" "webserver-1" {
  provider              = "alicloud.hk"
  image_id              = "${var.hk-image-webserver1-id}"
  instance_type         = "${var.webserver_instance_type}"
  system_disk_size      = 40
  system_disk_category  = "cloud_efficiency"
  security_groups       = ["${alicloud_security_group.hk-TRUST-SG.id}"]
  instance_name         = "webserver-1-${random_string.random_name_post.result}"
  vswitch_id            = "${alicloud_vswitch.hk-data-trust-vswitch.id}"
  private_ip            = "${var.web-server-1}"
  host_name             = "webserver-1"
  description           = "webserver-1"
  security_enhancement_strategy = "Active"
  instance_charge_type  = "PostPaid"
}

resource "alicloud_instance" "webserver-2" {
  provider              = "alicloud.hk"
  image_id              = "${var.hk-image-webserver2-id}"
  instance_type         = "${var.webserver_instance_type}"
  system_disk_size      = 40
  system_disk_category  = "cloud_efficiency"
  security_groups       = ["${alicloud_security_group.hk-TRUST-SG.id}"]
  instance_name         = "webserver-2-${random_string.random_name_post.result}"
  vswitch_id            = "${alicloud_vswitch.hk-data-trust-vswitch-2.id}"
  private_ip            = "${var.web-server-2}"
  host_name             = "webserver-2"
  description           = "webserver-2"
  security_enhancement_strategy = "Active"
  instance_charge_type  = "PostPaid"
}

# resource "alicloud_slb" "default" {
#   provider              = "alicloud.hk"
#   # region  = var.hk-region
#   specification = "slb.s1.small"
#   master_zone_id = "${data.alicloud_zones.hk-zone.zones.0.id}"
#   slave_zone_id = "${data.alicloud_zones.hk-zone.zones.1.id}"
#   #profile = "default"
#   address_type = "intranet"
#   vswitch_id    = "${alicloud_vswitch.hk-data-trust-vswitch.id}"
#   address = "10.0.6.79"
#   # servers_of_virtual_server_group = [
#   #   {
#   #     server_ids = "${alicloud_instance.webserver-1.id}, ${alicloud_instance.webserver-2.id}"
#   #     port       = "80"
#   #     weight     = "50"
#   #     type       = "ecs"
#   #   },
#   # ]
# }
# resource "alicloud_slb_backend_server" "default" {
#   provider              = "alicloud.hk"
#   load_balancer_id = alicloud_slb.default.id

#   backend_servers {
#     server_id = "${alicloud_instance.webserver-1.id}"
#     weight    = 50
#   }

#   backend_servers {
#     server_id = "${alicloud_instance.webserver-2.id}"
#     weight    = 50
#   }
# }

# resource "alicloud_slb_listener" "default" {
#   provider              = "alicloud.hk"
#   load_balancer_id          = alicloud_slb.default.id
#   backend_port              = 80
#   frontend_port             = 80
#   protocol                  = "http"
#   health_check              = "on"
#   health_check_uri          = "/"
#   health_check_connect_port = 80
#   healthy_threshold         = 8
#   unhealthy_threshold       = 8
#   health_check_timeout      = 8
#   health_check_interval     = 5
# }

module "slb" {
  source  = "alibaba/slb/alicloud"
  version = "1.6.1"
  name = "internal-slb-${random_string.random_name_post.result}"
  profile = var.profile
  address_type = "intranet"
  master_zone_id = "${data.alicloud_zones.hk-zone.zones.0.id}"
  region = var.hk-region
  slave_zone_id = "${data.alicloud_zones.hk-zone.zones.1.id}"
  spec = "slb.s1.small"
  vswitch_id    = "${alicloud_vswitch.hk-data-trust-vswitch.id}"
  servers_of_virtual_server_group = [
    {
      server_ids = "${alicloud_instance.webserver-1.id}, ${alicloud_instance.webserver-2.id}"
      port       = "80"
      weight     = "50"
      type       = "ecs"
    },
  ]
}

# resource "alicloud_slb_backend_server" "default" {
#   provider              = "alicloud.hk"
#   load_balancer_id = "${module.slb.this_slb_id}"

#   backend_servers {
#     server_id = "${alicloud_instance.webserver-1.id}"
#     weight    = 50
#   }

#   backend_servers {
#     server_id = "${alicloud_instance.webserver-2.id}"
#     weight    = 50
#   }
# }

resource "alicloud_slb_listener" "default" {
  provider              = "alicloud.hk"
  load_balancer_id          = "${module.slb.this_slb_id}"
  server_group_id           = "${module.slb.this_slb_virtual_server_group_id}"
  bandwidth                 = 10
  backend_port              = 80
  frontend_port             = 80
  protocol                  = "http"
  health_check              = "on"
  health_check_uri          = "/"
  health_check_connect_port = 80
  healthy_threshold         = 8
  unhealthy_threshold       = 8
  health_check_timeout      = 8
  health_check_interval     = 5
}

data "external" "apikey" {
  program = [
    "sh",
    "./script/get_fw_key.sh"
  ]

  query = {
    eip         = "${alicloud_eip.hk-MGMT-EIP.ip_address}"
    username    = "${var.username}"
    password    = "${var.password}"
  }
}
####################################################################
#Calling the deployment modules for the VM-Series in hk
####################################################################

module "fw_deployment" {
  source                = "./modules/fw_deployment/"

  fwimage_pri                           = "${var.hk-image-pri-name}"
  fwimageid_pri                         = "${var.hk-image-pri-id}"
  fwimage_bak                           = "${var.hk-image-bak-name}"
  fwimageid_bak                         = "${var.hk-image-bak-id}"  
  instancetype                      = "${var.vm-series_instance_type}"
  alicloud_security_grouphk-MGMT-SG = "${alicloud_security_group.hk-MGMT-SG.id}"
  hkname                            = "${var.hk-name}"
  hkname-2                          = "${var.hk-name-2}"
  hk-mgmt-vswitchid                 = "${alicloud_vswitch.hk-mgmt-vswitch.id}"
  hk-mgmt-vswitch-2id               = "${alicloud_vswitch.hk-mgmt-vswitch-2.id}"
  alicloud_eiphk-MGMT-EIPid         = "${alicloud_eip.hk-MGMT-EIP.id}"
  alicloud_eiphk-MGMT-EIP-2id       = "${alicloud_eip.hk-MGMT-EIP-2.id}"
  hk-mgmtip                         = "${var.hk-mgmt-ip}"
  hk-mgmt-2ip                       = "${var.hk-mgmt-ip-2}"
  hk-data-trust-vswitchid           = "${alicloud_vswitch.hk-data-trust-vswitch.id}"
  hk-data-trust-vswitch-2id         = "${alicloud_vswitch.hk-data-trust-vswitch-2.id}"
  hk-TRUST-SGid                     = "${alicloud_security_group.hk-TRUST-SG.id}"
  hk-trustip                        = "${var.hk-trust-ip}"
  hk-trust-2ip                      = "${var.hk-trust-ip-2}"
  hk-data-untrust-vswitchid         = "${alicloud_vswitch.hk-data-untrust-vswitch.id}"
  hk-data-untrust-vswitch-2id       = "${alicloud_vswitch.hk-data-untrust-vswitch-2.id}"
  hk-UNTRUST-SGid                   = "${alicloud_security_group.hk-UNTRUST-SG.id}"
  hk-untrustip                      = "${var.hk-untrust-ip}"
  hk-untrust-2ip                    = "${var.hk-untrust-ip-2}"
  access_key                        = "${var.access_key}"
  secret_key                        = "${var.secret_key}"
  region                            = "${var.hk-region}"
  route_table_id                    = "${alicloud_vpc.hk_vpc.route_table_id}"
  default_egress_route              = "${var.default_egress_route}"
  random                            = "${random_string.random_name_post.result}"

}

//Create the Function Service
resource "alicloud_fc_service" "paloalto-failover-service" {
  provider = "alicloud.hk"
  depends_on = [alicloud_ram_role.ram_role]
  name = "HA_Function_Service-${random_string.random_name_post.result}" 
  description = "Created by terraform"
  internet_access = true
  role = alicloud_ram_role.ram_role.arn
  # log_config {
  #   project = alicloud_log_project.failoverLogging.name
  #   logstore = alicloud_log_store.failoverLogging-Store.name
  # }

}
resource "alicloud_fc_function" "active-standby" {
  provider = "alicloud.hk"
  service     = alicloud_fc_service.paloalto-failover-service.name
  name        = "paloalto-failover-service-${random_string.random_name_post.result}"
  description = "Palo Alto Active Standby - AliCloud Created by Terraform"
  filename    = "./func/index.zip"
  memory_size = "128"
  runtime     = "python3"
  handler     = "index.handler"
  timeout     = "60"
  environment_variables = {
    managedby = "Created with Mason Yan and Daniel Ma"
    API_KEY   = "${data.external.apikey.result.api_key}"
    BACKUP_ENI = "${module.fw_deployment.trust-interface-bak}"
    PRIMARY_ENI = "${module.fw_deployment.trust-interface-pri}"
    PUB_BAK_ENI = "${module.fw_deployment.untrust-interface-bak}"
    PUB_PRI_ENI = "${module.fw_deployment.untrust-interface-pri}"
    EIP         = "${alicloud_eip.hk-UNTRUST-EIP.ip_address}"
    EIP_ID      = "${alicloud_eip.hk-UNTRUST-EIP.id}"
    PRIMARYNGFWMGMT_IP = "${alicloud_eip.hk-MGMT-EIP.ip_address}"
    REGION_ID   = "${var.hk-region}"
    ROUTETB_ID  = "${alicloud_vpc.hk_vpc.route_table_id}"
  }
}

//Function Compute Trigger
resource "alicloud_fc_trigger" "timer" {
  provider = "alicloud.hk"
  service  = alicloud_fc_service.paloalto-failover-service.name
  function = alicloud_fc_function.active-standby.name
  name     = "CronTrigger"
  type     = "timer"
  config   = <<EOF
{

            "cronExpression": "@every 1m",
            "enable": true
        }

EOF

}



# resource "alicloud_log_project" "failoverLogging" {
#   provider = "alicloud.hk"
#   name = "falover-log-${random_string.random_name_post.result}" //Name must be lower case
#   description = "created by terraform"
# }

# resource "alicloud_log_store" "failoverLogging-Store" {
#   provider = "alicloud.hk"
#   project = alicloud_log_project.failoverLogging.name
#   name = "failoverlog-store-${random_string.random_name_post.result}"
#   shard_count = 3
#   auto_split = true
#   max_split_shard_count = 60
#   append_meta = true
#   retention_period = 15
# }

# resource "alicloud_log_store_index" "log_store_index" {
#   provider = "alicloud.hk"
#   project = alicloud_log_project.failoverLogging.name
#   logstore = alicloud_log_store.failoverLogging-Store.name
#   full_text {
#     case_sensitive = true
#     token = " #$%^*\r\n "
#   }
#   field_search {
#     name = "failover"
#     enable_analytics = true
#   }
# }

resource "alicloud_ram_role" "ram_role" {
  provider = "alicloud.hk"
  name     = "FunctionCompute-RAM-Role-${random_string.random_name_post.result}"
  document = <<EOF
{
"Statement": [
    {
    "Action": "sts:AssumeRole",
    "Effect": "Allow",
    "Principal": {
        "Service": [
            "fc.aliyuncs.com"
        ]
    }
    }
],
"Version": "1"
}
EOF
  description = "FunctionCompute-RAM-Role."
  force = true
}

# resource "alicloud_ram_policy" "policy" {
#   provider = "alicloud.hk"
#   name = "Logging-Policy-${random_string.random_name_post.result}"
#   depends_on = [
#     alicloud_log_project.failoverLogging,
#     alicloud_log_store.failoverLogging-Store,
#   ]
#   document = <<EOF
# {
# "Statement": [
# {
#     "Action": "log:PostLogStoreLogs",
#     "Effect": "Allow",
#     "Resource" : "acs:log:*:*:project/${alicloud_log_project.failoverLogging.name}/logstore/${alicloud_log_store.failoverLogging-Store.name}"
# }
# ],
# "Version": "1"
# }
# EOF
#   description = "PaloAlto failover Logging Policy"
#   force       = true
# }

output "API-KEY" {
  #value = jsondecode(data.external.api-key)[0]
  value = "${data.external.apikey.result.api_key}"
}
output "VM-Series-MGMTIP" {
  value = "${alicloud_eip.hk-MGMT-EIP.ip_address}"  
}
output "VM-Series-MGMTIP-2" {
  value = "${alicloud_eip.hk-MGMT-EIP-2.ip_address}"  
}
output "VM-Series-UNTRUSTIP" {
  value = "${alicloud_eip.hk-UNTRUST-EIP.ip_address} *** Please manually attach this IP to Untrust ENI. *** \n\n"
}


output "EIP-Address" {
  value = "${alicloud_eip.hk-UNTRUST-EIP.ip_address}"
}
output "EIP-ID" {
  value = "${alicloud_eip.hk-UNTRUST-EIP.id}"
}
output "Primary-NGFW-Trust-ENI" {
  value = "${module.fw_deployment.trust-interface-pri}"
}
output "Backup-NGFW-Trust-ENI" {
  value = "${module.fw_deployment.trust-interface-bak}"
}
output "Primary-NGFW-UnTrust-ENI" {
  value = "${module.fw_deployment.untrust-interface-pri}"
}
output "Backup-NGFW-UnTrust-ENI" {
  value = "${module.fw_deployment.untrust-interface-bak}"
}
output "SLB-IP-Address" {
  value = "${module.slb.this_slb_address}"  
}
output "Region-ID" {
  value = "${var.hk-region}"
}
output "Route-Table-ID" {
  value = "${alicloud_vpc.hk_vpc.route_table_id} \n\n"
}





